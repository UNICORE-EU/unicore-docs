.. _ux_uftp:

|uftp-img| UFTP setup
---------------------

.. |uftp-img| image:: ../../_static/uftp.png
	:height: 32px
	:align: middle

UFTP is a high-performance file transfer protocol.  For using UFTP as
a data staging and file upload/download solution in UNICORE, a separate server 
(`UFTPD <https://uftp-docs.readthedocs.io/en/latest/admin-docs/uftpd/index.html>`_) is required. 
This is installed on a host with direct access to the file system, usually this is a cluster 
login node, but it can also be a separate host.

In a `UFTP transfer <https://uftp-docs.readthedocs.io/en/latest/index.html>`_, one side acts 
as a client and the other side is the uftpd server. UNICORE/X will run the client code via the 
:ref:`TSI <tsi>` (recommended) or in-process (with lower performance).

For details on how to install the UFTPD server please refer to the separate 
`UFTPD manual <https://uftp-docs.readthedocs.io/en/latest/admin-docs/uftpd/manual.html>`_,
which provides all information required to install and configure the UFTPD server.

The minimal required UNICORE/X configuration consists of 
the listen and command addresses of the UFTPD server.

::

  # Listener (pseudo-FTP) socket of UFTPD
  coreServices.uftp.server.host=uftp.yoursite.edu
  coreServices.uftp.server.port=64434
  
  # Command socket of UFTPD
  coreServices.uftp.command.host=uftp.yoursite.edu
  coreServices.uftp.command.port=64435 


Generally, the UFTP client code will be the TSI, and run on the login node.
You can optionally run the client code in the UNICORE/X process.
To enable this, set:

::

  coreServices.uftp.client.local=true


The following table shows all the available configuration options
for UFTP:

.. csv-table::
  :file: tables/uftpProperties.csv
  :widths: 25, 20, 15, 40
  :header-rows: 1
  :class: tight-table

Configuring multiple UFTPD servers
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can optionally configure multiple UFTPD servers that will then be used in
a round-robin fashion, to increase performance and scalability.

The configuration is similar to the simple case, but you can
have multiple *blocks* of servers.

As an example, consider this configuration of two UFTPD servers::

  coreServices.uftp.1.server.host=uftp.yoursite.edu
  coreServices.uftp.1.server.port=64434
  coreServices.uftp.1.command.host=uftp.yoursite.edu
  coreServices.uftp.1.command.port=64435
  
  coreServices.uftp.2.server.host=uftp-2.yoursite.edu
  coreServices.uftp.2.server.port=64434
  coreServices.uftp.2.command.host=uftp-2.yoursite.edu
  coreServices.uftp.2.command.port=64435

Use consecutive numbers (1, 2, ...) to define servers.
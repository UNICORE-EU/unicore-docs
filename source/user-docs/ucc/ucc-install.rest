.. _ucc_install:

|config-img| Installation and configuration
-------------------------------------------

.. |config-img| image:: ../../_static/configuration.png
	:height: 32px
	:align: middle
	
Prerequisites
~~~~~~~~~~~~~  

To run UCC, you need a Java runtime version 11 or later 
(`OpenJDK <https://openjdk.org/install/>`_ preferred).

Download
~~~~~~~~

You can get the latest UCC version from  
`GitHub <https://github.com/UNICORE-EU/commandline-client/releases>`_.


Installation and configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To install, unpack the distribution package (ZIP, DEB or RPM file) into a directory of your choice. 
For example, to install the UCC using a ZIP file, run the following command:

.. code:: console

  $ unzip unicore-ucc-<version>.zip
  
This will create the :file:`{<UCC_HOME>}` directory in your current location.
All configuration files will be located into the :file:`{<UCC_HOME>}/conf` directory.
Sample files can be found in :file:`{<UCC_HOME>}/samples` directory.

It is recommended to add the path to the :file:`{<UCC_HOME>}/bin` directory to your 
``PATH`` enviroment variable:

.. code:: console

  $ export PATH=$PATH:<UCC_HOME>/bin


Here, :file:`{<UCC_HOME>}` refers to the directory where UCC was installed.

.. note:: *Windows only* 

  Environment variables can be set (as *Administrator*) via:
  :menuselection:`Control panel --> System --> Extras panel`.
  
  Please do not install UCC in a directory that contains spaces (e.g. ``Program files``).
  Also, avoid long path names, as this may cause errors due to Windows
  command-line length limitations.
  
  


.. note:: *Debian distribution on Linux*

  Alternatively, on a Linux system, you can install the Debian package as follows:

  .. code:: console

    $ sudo dpkg -i unicore-ucc-<version>_all.deb  

  This will install the UNICORE client into ``/usr/share/unicore/ucc`` and
  automatically configure the system to include the ``/usr/bin/ucc`` start script 
  in your PATH. All configuration files will be placed in the :file:`{<USER_HOME>}/.ucc` directory.
  Sample files can be found in ``/usr/share/doc/unicore/ucc/samples`` directory.


Preferences file
~~~~~~~~~~~~~~~~

While many parameters can be specified on the command line, it is often more convenient 
to use a configuration file, so you donâ€™t have to enter the same information repeatedly.

By default, UCC looks for the file :file:`{<USER_HOME>}/.ucc/preferences` 
and reads it at startup. If the file does not exist, it will be created when you run 
your first UCC command (e.g. ``ucc -h``).

A minimal example specifying your username, password, and the UNICORE registry URL 
might look like this::

  registry=<your registry>
  
  authentication-method=username
  username=demouser
  password=test123
  
  truststore.type=directory
  truststore.directoryLocations.1=<path to CA file(s)>
  
  client.serverHostnameChecking=NONE

Ensure that the path to your trusted CA files (e.g., cacert.pem)  
is correct to avoid warning messages.
For a complete list of available configuration options, please refer to the 
:ref:`config-file` section.

.. note::
  If you are concerned about security and prefer not to specify the password 
  in the preferences file, UCC will prompt you for it if it is not provided either 
  in the file or on the command line.

  

.. note:: *Windows only* 

  On Windows, the preferences file is  typically located at: 
  :file:`c:\\Users\\\\{<user_name>}\\.ucc\preferences`.
  
  When specifying paths in the preferences file, you must either use double 
  backslashes (\\) or replace them with forward slashes (/).


For example, if you are using a local UNICORE installation for 
testing, you might set:
::

  registry=https://localhost:8080/DEMO-SITE/rest/core/registries/default_registry


.. tip::
  To change the default location of the preferences file, you can set a 
  Java system property in the UCC startup script (``ucc`` on Linux or ``ucc.batch`` on Windows). 
  For example, modify the Java command as follows:

  .. code:: console

    $ java .... -Ducc.preferences=<preferences location> ....


Logging
~~~~~~~

UCC displays some messages to the console, and provides more detailed information 
when verbose mode is enabled using the ``-v`` option.
If you need detailed logging (e.g. when using
the batch mode), you can edit the :file:`{<UCC_HOME>}/conf/logging.properties`
(or :file:`{<UCC_HOME>}/.ucc/logging.properties` in the Debian distribution)
file. This file configures the `Log4J 
<https://logging.apache.org/log4j/2.x/manual/configuration.html>`_ logging 
infrastructure used by UNICORE.
  
Installing UCC extensions
~~~~~~~~~~~~~~~~~~~~~~~~~

UCC can be extended with additional commands by simply copying the extension librarie files 
(``.jar`` files) into a directory that UCC scans at startup. By default, these directories are:

 * :file:`{<UCC_HOME>}/lib` (or ``/usr/share/unicore/ucc/lib`` if UCC was installed 
   via a Debian package)

 * :file:`{<USER_HOME>}/.ucc/lib`


.. _system-info:

Testing the installation
~~~~~~~~~~~~~~~~~~~~~~~~ 

To test your UCC installation and retrieve  information about the
services available in the UNICORE system you're connecting to, run the following command:

.. code:: console

  $ ucc system-info -l -v

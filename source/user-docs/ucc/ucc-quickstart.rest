.. _ucc_quickstart:

|start-img| Getting started with UCC
------------------------------------

.. |start-img| image:: ../../_static/start.png
	:height: 32px
	:align: middle

Assuming you have successfully installed UCC, this section
shows how to get started quickly.

.. _ucc_help:

Getting help
~~~~~~~~~~~~

Calling UCC with the ``-h`` option displays the available options. 
To view a list of available commands, use:

.. code:: console

  $ ucc -h

To get help on a specific command, use:

.. code:: console

  $  ucc <command> -h

See also :ref:`ucc_options` for a list of common options.


Connecting
~~~~~~~~~~

First, contact UNICORE and make sure you have access to at least one target system:
  
.. code:: console

  $ ucc connect
  

List available sites
~~~~~~~~~~~~~~~~~~~~

Next, list the sites available to you using: 
  
.. code:: console

  $ ucc list-sites


Running your first job
~~~~~~~~~~~~~~~~~~~~~~

The UCC distribution contains some job examples located in the <UCC_HOME>/samples directory 
that you can run. Let's run the `date.u 
<https://github.com/UNICORE-EU/commandline-client/blob/master/distribution/src/main/samples/date.u>`_ 
sample. The ``-v`` switch enables verbose output, so you can see more details about what is happening.

.. code:: console

  $ ucc run -v <UCC_HOME>/samples/date.u

This command will run *date* on a randomly chosen site, and retrieve the output. 
To target a specific site, use the ``-s`` option to specify the desired system.

.. note:: *Debian distribution on Linux*
  
  If UCC was installed from a DEBIAN file, sample files can be found in 
  ``/usr/share/doc/unicore/ucc/samples`` directory.


.. _list-jobs:

Listing your jobs
~~~~~~~~~~~~~~~~~

To list your jobs along with their status, use the following command:

.. code:: console

  $ ucc list-jobs -l

This will print a list of job URLs with their respective status 
(``RUNNING``, ``SUCCESSFUL``, etc).
  

Job Execution Example
~~~~~~~~~~~~~~~~~~~~~

After submitting a job, you can access its output files using various
UCC commands. This example shows how to submit a job, inspect its
status, explore the working directory, and handle output files.

.. code-block:: bash
   :emphasize-lines: 2,3,6,7,10,11,12,16,25,29,32
   
   # start a job and exit immediately (asynchronous submission)
   $ ucc run -a date.u
   https://134.94.198.76:8080/DEMO-SITE/rest/core/jobs/DkNJ0b38aD0
   
   # list all jobs
   $ ucc list-jobs
   https://134.94.198.76:8080/DEMO-SITE/rest/core/jobs/DkNJ0b38aD0
   
   # check the job's status
   $ ucc job-status -l https://134.94.198.76:8080/DEMO-SITE/rest/core/jobs/DkNJ0b38aD0
   https://134.94.198.76:8080/DEMO-SITE/rest/core/jobs/DkNJ0b38aD0 SUCCESSFUL exit code: 0
   Working directory: https://134.94.198.76:8080/DEMO-SITE/rest/core/storages/DkNJ0b38aD0-uspace
   Job type: BATCH, queue: 'batch'
   
   # list files in the job's working directory
   $ ucc ls -l https://134.94.198.76:8080/DEMO-SITE/rest/core/storages/DkNJ0b38aD0-uspace 
   -rw-r-----   2 2025-06-11T13:27:25+0000 /UNICORE_SCRIPT_EXIT_CODE
   -rw-r--r--   0 2025-06-11T13:27:25+0000 /stderr
   -rw-r--r--  29 2025-06-11T13:27:25+0000 /stdout
   -rwxrwxr-- 1099 2025-06-11T13:27:25+0000 /UNICORE_Job_1749648445137
   -rwxrwxr-- 362 2025-06-11T13:27:25+0000 /bss_submit_1749648445137
   
   # To access individual files, append /files/<filename> to the working directory URL!
   # For example, to view the contents of the stdout file:
   $ ucc cat https://mygateway:8080/DEMO-SITE/rest/core/storages/DkNJ0b38aD0-uspace/files/stdout
   Wed Jun 11 13:27:25 UTC 2025
    
   # download output to current directory
   $ ucc get-output https://mygateway:8080/DEMO-SITE/rest/core/storages/DkNJ0b38aD0-uspace/files/stdout
   
   # optionally check if stderr contains error messages
   $ ucc cat https://mygateway:8080/DEMO-SITE/rest/core/storages/DkNJ0b38aD0-uspace/files/stderr
   

